#
#=====================================================================================
# https://github.com/signigelchan/openwrt-build-actions
#
# Description: Build OpenWrt Firmware
#
# Source code repository: https://github.com/hanwckf/immortalwrt-mt798x | Branch: openwrt-21.02
#=====================================================================================
#
name: build-hanwckf-mt798x

on:
  #repository_dispatch:
  workflow_dispatch:
    inputs:
      openwrt_device:
        description: "Select device name"
        required: true
        default: "cmcc_rax3000m"
        type: choice
        options:
          - cmcc_rax3000m
          - h3c_nx30pro

env:
  REPO_URL: https://github.com/hanwckf/immortalwrt-mt798x
  REPO_BRANCH: openwrt-21.02
  DEVICE_NAME: ${{ inputs.openwrt_device }}
  CUSTOM_FILES: config-openwrt/custom-files
  CUSTOM_PATCHES: config-openwrt/custom-patches
  UPLOAD_ARTIFACTS: false
  UPLOAD_RELEASE: true
  TZ: Asia/Singapore

jobs:
  build:
    runs-on: ubuntu-22.04
    #if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Initialization environment variable
      run: |
          CONFIG_NAME=$(echo "${REPO_URL}" | sed 's/.*\///')
          BUILD_INFO=config-openwrt/${CONFIG_NAME}/buildinfo/${{ inputs.openwrt_device }}.config
          FEEDS_CONF=config-openwrt/${CONFIG_NAME}/feeds.conf.default
          SPECIFIC_PATCHES=config-openwrt/${CONFIG_NAME}/patches
          CUSTOM_PART1_FEEDS=config-openwrt/${CONFIG_NAME}/custom-part1-feeds.sh
          CUSTOM_PART2_CONF=config-openwrt/${CONFIG_NAME}/custom-part2-conf.sh
          echo "BUILD_INFO=${BUILD_INFO}" >> ${GITHUB_ENV}
          echo "FEEDS_CONF=${FEEDS_CONF}" >> ${GITHUB_ENV}
          echo "SPECIFIC_PATCHES=${SPECIFIC_PATCHES}" >> ${GITHUB_ENV}
          echo "CUSTOM_PART1_FEEDS=${CUSTOM_PART1_FEEDS}" >> ${GITHUB_ENV}
          echo "CUSTOM_PART2_CONF=${CUSTOM_PART2_CONF}" >> ${GITHUB_ENV}
          if [[ $CONFIG_NAME == "openwrt" ]]; then
            CONFIG_NAME="official"
          fi
          echo "CONFIG_NAME=${CONFIG_NAME}" >> ${GITHUB_ENV}

    - name: Initialization compile environment
      id: init
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
        sudo rm -rdf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc 2>/dev/null
        sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo -E apt-get -y update
        sudo -E apt-get -y install --no-install-recommends build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
          gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget
        sudo -E apt-get -y install --no-install-recommends $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
        sudo -E systemctl daemon-reload
        sudo -E apt-get -y clean && sudo -E apt-get -y autoclean
        sudo -E apt-get -y remove && sudo -E apt-get -y autoremove --purge
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Clone openwrt source code
      working-directory: /workdir
      if: steps.init.outputs.status == 'success' && !cancelled()
      run: |
        cat /etc/os-release
        free -m
        df -hT
        git clone -q --single-branch --depth 1 ${REPO_URL} -b ${REPO_BRANCH} openwrt
        ln -sf /workdir/openwrt ${GITHUB_WORKSPACE}/openwrt

    - name: Load custom feeds
      run: |
        [[ -e ${FEEDS_CONF} ]] && mv ${FEEDS_CONF} openwrt/feeds.conf.default
        sha256sum openwrt/feeds.conf.default

        chmod +x ${CUSTOM_PART1_FEEDS}
        cd openwrt/
        ${GITHUB_WORKSPACE}/${CUSTOM_PART1_FEEDS}

    - name: Update feeds
      run: |
        cd openwrt/
        ./scripts/feeds update -a

    - name: Install feeds
      run: |
        cd openwrt/
        ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [[ -d ${CUSTOM_FILES} ]] && mv ${CUSTOM_FILES} openwrt/files
        [[ -e ${BUILD_INFO} ]] && mv ${BUILD_INFO} openwrt/.config
        sha256sum openwrt/.config

        chmod +x ${CUSTOM_PART2_CONF}
        cd openwrt/
        ${GITHUB_WORKSPACE}/${CUSTOM_PART2_CONF}

    - name: Download packages
      id: package
      run: |
        cd openwrt/
        make defconfig
        echo -e "download thread count: $(nproc)"
        make download -j$(($(nproc)+1))
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt/
        echo -e "compile thread count: $(nproc)"
        make -j$(($(nproc)+1)) || make -j1 || make -j1 V=s
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        df -hT
        cd openwrt/bin/targets/*/*
        ls -alh
        rm -rf packages
        BUILT_PATH=${PWD}
        BUILT_DATE=$(date +"%Y.%m.%d")
        echo "BUILT_PATH=${BUILT_PATH}" >> ${GITHUB_ENV}
        echo "BUILT_DATE=${BUILT_DATE}" >> ${GITHUB_ENV}

        cd ${GITHUB_WORKSPACE}/openwrt/bin
        7z a -r -t7z openwrt_${CONFIG_NAME}_${DEVICE_NAME}_${BUILT_DATE}.7z ${BUILT_PATH}/*
        ls -alh
        echo "PKGED_PATH=${PWD}" >> ${GITHUB_ENV}
        echo "build_tag=OpenWrt_${CONFIG_NAME}_${BUILT_DATE}" >> ${GITHUB_OUTPUT}
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Upload firmware to Actions
      uses: actions/upload-artifact@v3
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_ARTIFACTS == 'true' && !cancelled()
      with:
        name: openwrt_${{ env.CONFIG_NAME }}_${{ env.DEVICE_NAME }}_${{ env.BUILT_DATE }}
        path: ${{ env.PKGED_PATH }}/*.7z

    - name: Upload firmware to Releases
      uses: ncipollo/release-action@main
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        tag: ${{ steps.organize.outputs.build_tag }}
        artifacts: ${{ env.PKGED_PATH }}/*.7z
        allowUpdates: true
        removeArtifacts: false
        replacesArtifacts: true
        token: ${{ secrets.GH_TOKEN }}
        body: |
          ### OpenWrt Source information
          - Source code: ```${{ env.REPO_URL }}```
          - Branch: ```${{ env.REPO_BRANCH }}```

          ### OpenWrt Firmware infomation
          - Default IP: ```192.168.1.1```
          - Default username: ```root```
          - Default password: ```""```

