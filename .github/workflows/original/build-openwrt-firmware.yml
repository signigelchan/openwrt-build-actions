#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
name: Build OpenWrt Firmware

on:
#  repository_dispatch:
  workflow_dispatch:
    inputs:
      openwrt_device:
        description: "Select device type"
        required: true
        default: "tplink_tl-wr720n-v4"
        type: choice
        options:
          - tplink_tl-wr720n-v4
          - d-team_newifi-d2
          - armvirt-64
      openwrt_repo:
        description: "Set openwrt repo"
        required: true
        default: "openwrt/openwrt"
      openwrt_branch:
        description: "Set repo branch"
        required: true
        default: "openwrt-22.03"

env:
  REPO_URL: ${{ inputs.openwrt_repo }}
  REPO_BRANCH: ${{ inputs.openwrt_branch }}
  CONFIG_FILE: config-openwrt/openwrt/buildinfo/${{ inputs.openwrt_device }}.config
  FEEDS_CONF: config-openwrt/openwrt/feeds.conf.default
  DIY_P1_SH: config-openwrt/openwrt/custom-part1-feeds.sh
  DIY_P2_SH: config-openwrt/openwrt/custom-part2-conf.sh
  UPLOAD_FIRMWARE: true
  TZ: America/New_York

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Initialization environment
      id: init
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
        sudo rm -rdf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc 2>/dev/null
        sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo -E apt-get -y update
        sudo -E apt-get -y install --no-install-recommends build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
          gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget
        sudo -E apt-get -y install --no-install-recommends $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
        sudo -E systemctl daemon-reload
        sudo -E apt-get -y clean && sudo -E apt-get -y autoclean
        sudo -E apt-get -y remove && sudo -E apt-get -y autoremove --purge
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Clone source code
      working-directory: /workdir
      if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
      run: |
        df -hT
        git clone https://github.com/${REPO_URL} -b ${REPO_BRANCH} openwrt
        ln -sf /workdir/openwrt ${GITHUB_WORKSPACE}/openwrt

    - name: Load custom feeds
      run: |
        [ -e ${FEEDS_CONF} ] && mv ${FEEDS_CONF} openwrt/feeds.conf.default
        chmod +x ${DIY_P1_SH}
        cd openwrt
        ${GITHUB_WORKSPACE}/${DIY_P1_SH}

    - name: Update feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a

    - name: Install feeds
      run: |
        cd openwrt
        ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e "${CONFIG_FILE}" ] && mv "${CONFIG_FILE}" openwrt/.config
        chmod +x ${DIY_P2_SH}
        cd openwrt
        ${GITHUB_WORKSPACE}/${DIY_P2_SH}

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        echo -e "download thread count: $(nproc)"
        make download -j$(($(nproc)+1))
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "compile thread count: $(nproc)"
        make -j$(($(nproc)+1)) || make -j1 || make -j1 V=s
        echo "status=success" >> ${GITHUB_OUTPUT}
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> ${GITHUB_ENV}
        echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> ${GITHUB_ENV}

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> ${GITHUB_ENV}
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Upload firmware directory
      uses: actions/upload-artifact@v3
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

