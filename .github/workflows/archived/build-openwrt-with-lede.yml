#
#=====================================================================================
# https://github.com/signigelchan/openwrt-build-actions
#
# Description: Build openwrt with lede
#
# Source code repository: https://github.com/coolsnowwolf/lede / Branch: master
#=====================================================================================
#
name: Build openwrt with lede

on:
#  repository_dispatch:
  workflow_dispatch:
    inputs:
      openwrt_device:
        description: 'Select device type'
        required: true
        default: 'tplink_tl-wr720n-v4'
        type: choice
        options:
          - tplink_tl-wr720n-v4
          - d-team_newifi-d2
          - armvirt-64
      packit_armvirt:
        description: 'Armvirt firmware to packit ?'
        required: true
        default: false
        type: boolean
      packit_soc:
        description: 'Set the packit device board'
        required: true
        default: 's905d'
      packit_kernel_version:
        description: 'Set the packit ophub/kernel version'
        required: true
        default: '5.10.176'
      packit_kernel_auto_latest:
        description: 'Set whether to use latest kernel'
        required: false
        default: false
        type: boolean
      packit_sw_flow:
        description: 'Select whether to enable SW_FLOWOFFLOAD'
        required: false
        default: '1'
        type: choice
        options:
          - '0'
          - '1'
      packit_hw_flow:
        description: 'Select whether to enable HW_FLOWOFFLOAD'
        required: false
        default: '0'
        type: choice
        options:
          - '0'
          - '1'
      packit_sfe_flow:
        description: "Select whether to enable SFE_FLOW"
        required: false
        default: '1'
        type: choice
        options:
          - '0'
          - '1'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  DEVICE_TYPE: ${{ inputs.openwrt_device }}
  CONFIG_FILE: config-openwrt/lede/buildinfo/${{ inputs.openwrt_device }}.config
  FEEDS_CONF: config-openwrt/lede/feeds.conf.default
  CUSTOM_PART1_FEEDS: config-openwrt/lede/custom-part1-feeds.sh
  CUSTOM_PART2_CONF: config-openwrt/lede/custom-part2-conf.sh
  CUSTOM_FILES: config-openwrt/.files/
  PATCH_DIR: config-openwrt/.patch/
  UPLOAD_ARTIFACTS: false
  UPLOAD_RELEASE: true
  ARMVIRT_PACKIT: ${{ inputs.packit_armvirt }}
  ARMVIRT_SOC: ${{ inputs.packit_soc }}
  ARMVIRT_SW_FLOWOFFLOAD: ${{ inputs.packit_sw_flow }}
  ARMVIRT_HW_FLOWOFFLOAD: ${{ inputs.packit_hw_flow }}
  ARMVIRT_SFE_FLOW: ${{ inputs.packit_sfe_flow }}
  UPLOAD_ARMVIRT_ARTIFACTS: false
  UPLOAD_ARMVIRT_RELEASE: true
  TZ: America/New_York

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Initialization environment
      id: init
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
        sudo rm -rdf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc 2>/dev/null
        sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo -E apt-get -y update
        sudo -E apt-get -y install --no-install-recommends build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
          gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget
        sudo -E apt-get -y install --no-install-recommends $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
        sudo -E systemctl daemon-reload
        sudo -E apt-get -y clean && sudo -E apt-get -y autoclean
        sudo -E apt-get -y remove && sudo -E apt-get -y autoremove --purge
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir/
        sudo chown $USER:$GROUPS /workdir
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Clone source code
      working-directory: /workdir
      if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
      run: |
        cat /etc/os-release
        free -m
        df -hT
        git clone -q --single-branch --depth 1 ${REPO_URL} -b ${REPO_BRANCH} openwrt
        ln -sf /workdir/openwrt/ ${GITHUB_WORKSPACE}/openwrt

    - name: Patch supported device code
      if: env.DEVICE_TYPE == 'tplink_tl-wr720n-v4' && env.PATCH_DIR != '' && !cancelled()
      run: |
        mv -f "${PATCH_DIR}" openwrt/.patch-home
        cd openwrt/
        echo -e "dest patch root-dir: $PWD"
        git config --global user.email "committer@github.com"
        git config --global user.name "github committer"
        git apply --stat .patch-home/*.patch
        git apply --check .patch-home/*.patch
        git am .patch-home/*.patch

    - name: Load custom feeds
      run: |
        [[ -e "${FEEDS_CONF}" ]] && mv -f "${FEEDS_CONF}" openwrt/feeds.conf.default
        sha256sum openwrt/feeds.conf.default
        chmod +x ${CUSTOM_PART1_FEEDS}
        cd openwrt/
        ${GITHUB_WORKSPACE}/${CUSTOM_PART1_FEEDS}

    - name: Update feeds
      run: |
        cd openwrt/
        ./scripts/feeds update -a

    - name: Install feeds
      run: |
        cd openwrt/
        ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [[ -d "${CUSTOM_FILES}" ]] && mv -f "${CUSTOM_FILES}" openwrt/files
        [[ -e "${CONFIG_FILE}" ]] && mv -f "${CONFIG_FILE}" openwrt/.config
        sha256sum openwrt/.config
        chmod +x ${CUSTOM_PART2_CONF}
        cd openwrt/
        ${GITHUB_WORKSPACE}/${CUSTOM_PART2_CONF}

    - name: Download packages
      id: package
      run: |
        cd openwrt/
        make defconfig
        echo -e "download thread count: $(nproc)"
        make download -j$(($(nproc)+1))
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt/
        echo -e "compile thread count: $(nproc)"
        make -j$(($(nproc)+1)) || make -j1 || make -j1 V=s
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Organize files
      id: organize
      if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
      run: |
        df -hT
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "COMPILED_DATE=$(date +"%Y.%m.%d")" >> ${GITHUB_ENV}
        echo "FIRMWARE_PATH=$PWD" >> ${GITHUB_ENV}
        echo "build_tag=openWrt_lede_$(date +"%Y.%m")" >> ${GITHUB_OUTPUT}
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Upload firmware to Actions
      uses: actions/upload-artifact@v3
      if: ${{ steps.organize.outputs.status }} == 'success' && env.UPLOAD_ARTIFACTS == 'true' && !cancelled()
      with:
        name: openwrt_lede_${{ env.DEVICE_TYPE }}_${{ env.COMPILED_DATE }}
        path: ${{ env.FIRMWARE_PATH }}

    - name: Upload firmware to Releases
      uses: ncipollo/release-action@main
      if: ${{ steps.organize.outputs.status }} == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        tag: ${{ steps.compile.outputs.build_tag }}
        name: openwrt_lede_${{ env.DEVICE_TYPE }}_${{ env.COMPILED_DATE }}
        artifacts: ${{ env.FIRMWARE_PATH }}
        allowUpdates: true
        removeArtifacts: false
        replacesArtifacts: true
        token: ${{ secrets.GH_TOKEN }}

    - name: Armvirt firmware packit
      uses: signigelchan/openwrt-packit-actions@main
      if: ${{ steps.compile.outputs.status }} == 'success' && env.ARMVIRT_PACKIT == 'true' && !cancelled()
      env:
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
        KERNEL_REPO_URL: "ophub/kernel"
        KERNEL_VERSION_NAME: ${{ inputs.packit_kernel_version }}
        KERNEL_AUTO_LATEST: ${{ inputs.packit_kernel_auto_latest }}
        PACKAGE_SOC: ${{ env.ARMVIRT_SOC }}
        GZIP_IMGS: .7z
        WHOAMI: "chanworks"
        OPENWRT_VER: "armvirt"
        DISTRIB_REVISION: "OpenWrt"
        SW_FLOWOFFLOAD: ${{ env.ARMVIRT_SW_FLOWOFFLOAD }}
        HW_FLOWOFFLOAD: ${{ env.ARMVIRT_HW_FLOWOFFLOAD }}
        SFE_FLOW: ${{ env.ARMVIRT_SFE_FLOW }}
        ENABLE_WIFI_K504: 1
        ENABLE_WIFI_K510: 1

    - name: Upload packit firmware to Actions
      uses: actions/upload-artifact@v3
      if: >
        (!env.PACKAGED_STATUS || env.PACKAGED_STATUS == 'success') &&
        env.ARMVIRT_PACKIT == 'true' && env.UPLOAD_ARMVIRT_ARTIFACTS == 'true' && !cancelled()
      with:
        name: openwrt_lede_packit_${{ env.ARMVIRT_SOC }}_${{ env.COMPILED_DATE }}
        path: ${{ env.PACKAGED_OUTPUTPATH }}/*

    - name: Upload packit firmware to Releases
      uses: ncipollo/release-action@main
      if: >
        (!env.PACKAGED_STATUS || env.PACKAGED_STATUS == 'success') &&
        env.ARMVIRT_PACKIT == 'true' && env.UPLOAD_ARMVIRT_RELEASE == 'true' && !cancelled()
      with:
        tag: ${{ steps.compile.outputs.build_tag }}
        name: openwrt_lede_packit_${{ env.ARMVIRT_SOC }}_${{ env.COMPILED_DATE }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        allowUpdates: true
        removeArtifacts: false
        replacesArtifacts: true
        token: ${{ secrets.GH_TOKEN }}

